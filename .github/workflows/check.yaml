name: Format & Lint Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  check-core:
    name: Check Core (Python)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./core

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync

      - name: Check formatting with Ruff
        run: uv run ruff format --check src/

      - name: Lint with Ruff
        run: uv run ruff check src/

      - name: Type check with MyPy
        run: uv run mypy src/

  check-sdk-py:
    name: Check SDK-PY (Python)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./sdk-py

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync

      - name: Check formatting with Ruff
        run: uv run ruff format --check src/ tests/

      - name: Lint with Ruff
        run: uv run ruff check src/ tests/

      - name: Type check with MyPy
        run: uv run mypy src/

  check-sdk-js:
    name: Check SDK-JS (TypeScript)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./sdk-js

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: './sdk-js/pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check formatting with Prettier
        run: pnpm run format:check

      - name: Lint with ESLint
        run: pnpm run lint

      - name: Type check with TypeScript
        run: pnpm run typecheck

  check-ui:
    name: Check UI (React/TypeScript)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ui

    steps:
      - uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Check formatting with Prettier
        run: bun run format:check

      - name: Lint with ESLint
        run: bun run lint

      - name: Type check with TypeScript
        run: bun run build

  # Summary job that all checks passed
  all-checks:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [check-core, check-sdk-py, check-sdk-js, check-ui]
    steps:
      - run: echo "All formatting, linting, and type checks passed!"
